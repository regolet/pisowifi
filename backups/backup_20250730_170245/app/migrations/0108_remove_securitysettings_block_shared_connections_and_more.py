# Generated by Django 4.2 on 2025-07-29 06:03

import datetime
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('app', '0107_blockeddevices_securitysettings_trafficmonitor_and_more'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='securitysettings',
            name='Block_Shared_Connections',
        ),
        migrations.AddField(
            model_name='securitysettings',
            name='Enable_Device_Blocking',
            field=models.BooleanField(default=False, help_text='Enable complete device blocking as last resort', verbose_name='Enable Device Blocking'),
        ),
        migrations.AddField(
            model_name='securitysettings',
            name='Limit_Connections',
            field=models.BooleanField(default=True, help_text='Limit simultaneous connections for devices with suspicious TTL', verbose_name='Limit Connections'),
        ),
        migrations.AddField(
            model_name='securitysettings',
            name='Normal_Device_Connections',
            field=models.IntegerField(default=3, help_text='Max simultaneous connections for devices with normal TTL', verbose_name='Normal Device Limit'),
        ),
        migrations.AddField(
            model_name='securitysettings',
            name='Suspicious_Device_Connections',
            field=models.IntegerField(default=1, help_text='Max simultaneous connections for devices with suspicious TTL (likely sharing)', verbose_name='Suspicious Device Limit'),
        ),
        migrations.AlterField(
            model_name='securitysettings',
            name='Block_Duration',
            field=models.DurationField(default=datetime.timedelta(seconds=3600), help_text='How long to block violating clients if blocking is enabled', verbose_name='Block Duration'),
        ),
        migrations.AlterField(
            model_name='securitysettings',
            name='Max_TTL_Violations',
            field=models.IntegerField(default=5, help_text='Number of TTL violations before applying strict limits', verbose_name='Max TTL Violations'),
        ),
        migrations.CreateModel(
            name='ConnectionTracker',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Device_MAC', models.CharField(max_length=255, verbose_name='Device MAC')),
                ('Connection_IP', models.CharField(max_length=15, verbose_name='Connection IP')),
                ('Session_ID', models.CharField(help_text='Unique identifier for this connection session', max_length=100, verbose_name='Session ID')),
                ('Connected_At', models.DateTimeField(auto_now_add=True, verbose_name='Connected At')),
                ('Last_Activity', models.DateTimeField(auto_now=True, verbose_name='Last Activity')),
                ('Is_Active', models.BooleanField(default=True, verbose_name='Active Connection')),
                ('TTL_Classification', models.CharField(choices=[('normal', 'Normal TTL'), ('suspicious', 'Suspicious TTL'), ('unknown', 'Unknown TTL')], default='unknown', max_length=20, verbose_name='TTL Classification')),
                ('User_Agent', models.TextField(blank=True, null=True, verbose_name='User Agent')),
            ],
            options={
                'verbose_name': 'Connection Tracker',
                'verbose_name_plural': 'Connection Tracker',
                'ordering': ['-Connected_At'],
                'unique_together': {('Device_MAC', 'Session_ID')},
            },
        ),
    ]
