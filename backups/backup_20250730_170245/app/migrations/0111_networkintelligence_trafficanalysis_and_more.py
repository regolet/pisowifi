# Generated by Django 4.2 on 2025-07-29 06:35

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('app', '0110_devicefingerprint'),
    ]

    operations = [
        migrations.CreateModel(
            name='NetworkIntelligence',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Timestamp', models.DateTimeField(auto_now_add=True)),
                ('Total_Active_Devices', models.IntegerField(default=0)),
                ('Total_Bandwidth_Usage_Mbps', models.FloatField(default=0.0)),
                ('Network_Utilization_Percent', models.FloatField(default=0.0)),
                ('Suspicious_Devices_Count', models.IntegerField(default=0)),
                ('TTL_Violations_Last_Hour', models.IntegerField(default=0)),
                ('MAC_Randomization_Detected_Count', models.IntegerField(default=0)),
                ('Active_QoS_Rules', models.IntegerField(default=0)),
                ('Revenue_Per_Hour', models.FloatField(default=0.0)),
                ('Average_Session_Duration_Minutes', models.FloatField(default=0.0)),
                ('Peak_Concurrent_Users', models.IntegerField(default=0)),
                ('HTTP_Traffic_Percent', models.FloatField(default=0.0)),
                ('P2P_Traffic_Percent', models.FloatField(default=0.0)),
                ('Streaming_Traffic_Percent', models.FloatField(default=0.0)),
                ('Gaming_Traffic_Percent', models.FloatField(default=0.0)),
                ('Other_Traffic_Percent', models.FloatField(default=0.0)),
            ],
            options={
                'verbose_name': 'Network Intelligence',
                'verbose_name_plural': 'Network Intelligence',
                'ordering': ['-Timestamp'],
            },
        ),
        migrations.CreateModel(
            name='TrafficAnalysis',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Device_MAC', models.CharField(max_length=255, verbose_name='Device MAC')),
                ('Timestamp', models.DateTimeField(auto_now_add=True)),
                ('Protocol_Type', models.CharField(choices=[('http', 'HTTP/HTTPS'), ('p2p', 'P2P/Torrenting'), ('streaming', 'Video Streaming'), ('gaming', 'Gaming'), ('social', 'Social Media'), ('messaging', 'Messaging'), ('other', 'Other')], default='other', max_length=20)),
                ('Bytes_Up', models.BigIntegerField(default=0, verbose_name='Upload Bytes')),
                ('Bytes_Down', models.BigIntegerField(default=0, verbose_name='Download Bytes')),
                ('Packets_Up', models.IntegerField(default=0, verbose_name='Upload Packets')),
                ('Packets_Down', models.IntegerField(default=0, verbose_name='Download Packets')),
                ('Source_IP', models.GenericIPAddressField(blank=True, null=True)),
                ('Destination_IP', models.GenericIPAddressField(blank=True, null=True)),
                ('Source_Port', models.IntegerField(blank=True, null=True)),
                ('Destination_Port', models.IntegerField(blank=True, null=True)),
                ('Is_Suspicious', models.BooleanField(default=False, verbose_name='Suspicious Traffic')),
                ('Suspicion_Reason', models.CharField(blank=True, max_length=255, null=True)),
                ('Bandwidth_Usage_MB', models.FloatField(default=0.0, verbose_name='Bandwidth Usage (MB)')),
                ('Device_Fingerprint', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.devicefingerprint')),
            ],
            options={
                'verbose_name': 'Traffic Analysis',
                'verbose_name_plural': 'Traffic Analysis',
                'ordering': ['-Timestamp'],
            },
        ),
        migrations.CreateModel(
            name='DeviceBehaviorProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Average_Session_Duration', models.DurationField(default=datetime.timedelta(0))),
                ('Total_Data_Used_MB', models.FloatField(default=0.0, verbose_name='Total Data Used (MB)')),
                ('Peak_Bandwidth_Usage', models.FloatField(default=0.0, verbose_name='Peak Bandwidth (Mbps)')),
                ('Favorite_Protocol', models.CharField(blank=True, max_length=20, null=True)),
                ('Most_Active_Hour', models.IntegerField(blank=True, help_text='Hour of day (0-23)', null=True)),
                ('Average_Concurrent_Connections', models.FloatField(default=1.0)),
                ('P2P_Usage_Percentage', models.FloatField(default=0.0, verbose_name='P2P Usage %')),
                ('Streaming_Usage_Percentage', models.FloatField(default=0.0, verbose_name='Streaming Usage %')),
                ('Trust_Level', models.CharField(choices=[('new', 'New Device'), ('trusted', 'Trusted'), ('suspicious', 'Suspicious'), ('abusive', 'Abusive'), ('banned', 'Banned')], default='new', max_length=20)),
                ('Trust_Score', models.FloatField(default=50.0, verbose_name='Trust Score (0-100)')),
                ('Violation_Score', models.FloatField(default=0.0, verbose_name='Violation Score')),
                ('First_Analysis', models.DateTimeField(auto_now_add=True)),
                ('Last_Updated', models.DateTimeField(auto_now=True)),
                ('Last_Violation_Date', models.DateTimeField(blank=True, null=True)),
                ('Device_Fingerprint', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='app.devicefingerprint')),
            ],
            options={
                'verbose_name': 'Device Behavior Profile',
                'verbose_name_plural': 'Device Behavior Profiles',
                'ordering': ['-Last_Updated'],
            },
        ),
        migrations.CreateModel(
            name='AdaptiveQoSRule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Device_MAC', models.CharField(max_length=255, verbose_name='Device MAC')),
                ('Rule_Name', models.CharField(max_length=100, verbose_name='Rule Name')),
                ('QoS_Action', models.CharField(choices=[('priority_low', 'Low Priority'), ('priority_normal', 'Normal Priority'), ('priority_high', 'High Priority'), ('throttle_light', 'Light Throttling (75%)'), ('throttle_medium', 'Medium Throttling (50%)'), ('throttle_heavy', 'Heavy Throttling (25%)'), ('block', 'Block Traffic')], default='priority_normal', max_length=20)),
                ('Bandwidth_Limit_Down', models.FloatField(blank=True, null=True, verbose_name='Download Limit (Mbps)')),
                ('Bandwidth_Limit_Up', models.FloatField(blank=True, null=True, verbose_name='Upload Limit (Mbps)')),
                ('Trigger_Condition', models.TextField(help_text='JSON condition for rule activation', verbose_name='Trigger Condition')),
                ('Protocol_Filter', models.CharField(blank=True, max_length=20, null=True, verbose_name='Protocol Filter')),
                ('Is_Active', models.BooleanField(default=True)),
                ('Auto_Created', models.BooleanField(default=False, verbose_name='Auto-Generated Rule')),
                ('Created_At', models.DateTimeField(auto_now_add=True)),
                ('Expires_At', models.DateTimeField(blank=True, null=True)),
                ('Last_Applied', models.DateTimeField(blank=True, null=True)),
                ('Times_Applied', models.IntegerField(default=0)),
                ('Bytes_Limited', models.BigIntegerField(default=0)),
                ('Device_Fingerprint', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.devicefingerprint')),
            ],
            options={
                'verbose_name': 'Adaptive QoS Rule',
                'verbose_name_plural': 'Adaptive QoS Rules',
                'ordering': ['-Created_At'],
            },
        ),
    ]
