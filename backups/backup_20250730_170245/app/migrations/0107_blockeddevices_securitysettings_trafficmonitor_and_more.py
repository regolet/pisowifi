# Generated by Django 4.2 on 2025-07-29 05:57

import datetime
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('app', '0106_auto_20201130_1445'),
    ]

    operations = [
        migrations.CreateModel(
            name='BlockedDevices',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('MAC_Address', models.CharField(max_length=255, unique=True, verbose_name='MAC Address')),
                ('Device_Name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Device Name')),
                ('Block_Reason', models.CharField(choices=[('ttl_sharing', 'Internet Sharing Detected (TTL)'), ('abuse', 'Terms of Service Violation'), ('manual', 'Manually Blocked'), ('security', 'Security Risk'), ('suspicious', 'Suspicious Activity')], default='manual', max_length=20, verbose_name='Block Reason')),
                ('Blocked_Date', models.DateTimeField(auto_now_add=True, verbose_name='Blocked Date')),
                ('Auto_Unblock_After', models.DateTimeField(blank=True, null=True, verbose_name='Auto Unblock After')),
                ('TTL_Violations_Count', models.IntegerField(default=0, verbose_name='TTL Violations')),
                ('Is_Active', models.BooleanField(default=True, verbose_name='Block Active')),
                ('Admin_Notes', models.TextField(blank=True, null=True, verbose_name='Admin Notes')),
            ],
            options={
                'verbose_name': 'Blocked Device',
                'verbose_name_plural': 'Blocked Devices',
                'ordering': ['-Blocked_Date'],
            },
        ),
        migrations.CreateModel(
            name='SecuritySettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('TTL_Detection_Enabled', models.BooleanField(default=True, help_text='Enable detection of internet sharing via TTL analysis', verbose_name='Enable TTL Detection')),
                ('Default_TTL_Value', models.IntegerField(default=64, help_text='Expected TTL value from client devices (Windows: 128, Linux/Android: 64, macOS: 64)', verbose_name='Expected TTL')),
                ('TTL_Tolerance', models.IntegerField(default=2, help_text='Allowed TTL variance before flagging as suspicious', verbose_name='TTL Tolerance')),
                ('Block_Shared_Connections', models.BooleanField(default=True, help_text='Automatically block clients detected sharing internet', verbose_name='Auto-Block Sharing')),
                ('Max_TTL_Violations', models.IntegerField(default=3, help_text='Number of TTL violations before auto-blocking', verbose_name='Max TTL Violations')),
                ('Block_Duration', models.DurationField(default=datetime.timedelta(seconds=3600), help_text='How long to block violating clients', verbose_name='Block Duration')),
            ],
            options={
                'verbose_name': 'Security Settings',
                'verbose_name_plural': 'Security Settings',
            },
        ),
        migrations.CreateModel(
            name='TrafficMonitor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Client_MAC', models.CharField(max_length=255, verbose_name='Client MAC')),
                ('Timestamp', models.DateTimeField(auto_now_add=True)),
                ('TTL_Value', models.IntegerField(verbose_name='Detected TTL')),
                ('Packet_Count', models.IntegerField(default=1, verbose_name='Packet Count')),
                ('Is_Suspicious', models.BooleanField(default=False, verbose_name='Suspicious Activity')),
                ('Notes', models.TextField(blank=True, help_text='Additional notes about the traffic', null=True)),
            ],
            options={
                'verbose_name': 'Traffic Monitor',
                'verbose_name_plural': 'Traffic Monitor',
                'ordering': ['-Timestamp'],
            },
        ),
        migrations.DeleteModel(
            name='PushNotifications',
        ),
    ]
